{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","props","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","id","renderMessages","keys","Object","key","lastMessageKey","width","title","height","App","projectID","userSecret","renderChatFeed","chatAppProps","renderNewChatForm","renderChatSettingsTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.500c599f.chunk.js","sourcesContent":["const MyMessage = ({ message }) => {\r\n    if (message?.attachments?.length > 0) {\r\n        return (\r\n            <img src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float: 'right' }}\r\n            />\r\n        )\r\n    }\r\n    return <div className=\"message\"\r\n        style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3b2a50' }}\r\n    > {message.text}\r\n    </div>;\r\n};\r\n\r\nexport default MyMessage;\r\n","const TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser =\r\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n        />\r\n      )}\r\n      {message?.attachments?.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachment\"\r\n          className=\"message-image\"\r\n          style={{ marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            float: \"left\",\r\n            backgroundColor: \"#cabcdc\",\r\n            marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\",\r\n          }}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheirMessage;\r\n","// import MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => {\r\n    return chat.people.map((person, index) => person.last_read === message.id && (\r\n      <div \r\n        key={`read_${index}`}\r\n        className=\"read-receipt\"\r\n        style = {{\r\n          float: isMyMessage ? 'right' : 'left',\r\n          backgroundImage: `url(${person?.person?.avatar})`\r\n        }}\r\n      />\r\n    ))\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage ? (\r\n              <MyMessage message={message} />\r\n            ) : (\r\n              <TheirMessage\r\n                message={message}\r\n                lastMessage={messages[lastMessageKey]}\r\n              />\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"read-receipts\"\r\n            style={{\r\n              marginRight: isMyMessage ? \"18px\" : \"0px\",\r\n              marginLeft: isMyMessage ? \"0px\" : \"68px\",\r\n            }}\r\n          >\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  renderMessages();\r\n  if (!chat) return \"Loading...\";\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => `${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: \"100px\" }} />\r\n      {/* <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatID={activeChat} />\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;\r\n","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport ChatFeed from './components/ChatFeed'\r\n// import LoginForm from './components/LoginForm'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    // if(!localStorage.getItem('username')) return <LoginForm />\r\n    return (\r\n        <ChatEngine\r\n            height=\"100vh\"\r\n            projectID=\"\r\naaecad3d-06c4-4f20-ac56-466893a64081\"\r\n            userName=\"JamesHalpert\"\r\n            userSecret=\"123456789\"\r\n            renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n            renderNewChatForm={() => <div />}\r\n            renderChatSettingsTop = {() => <div/>}\r\n        />\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}